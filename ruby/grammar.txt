# 10.1
program : statements EOF
        ;

# 10.2
statements : statement >statements<?
           ;

statement  : expression
           ;

expression : <arg>
           ;

arg: <primary>
     ;

primary:  <literal> | <variable>;

literal: <numeric_literal>
         ;

numeric_literal: <signed_number> | <unsigned_number>;

ADDOP: "[+-]";

signed_number: ADDOP unsigned_number;

unsigned_number: <integer_literal>;

integer_literal: <DECIMAL_INTEGER_LITERAL>
               | <BINARY_INTEGER_LITERAL>
               | <OCTAL_INTEGER_LITERAL>
               | <HEX_INTEGER_LITERAL>
               ;

DECIMAL_INTEGER_LITERAL: "(0[dD])?[0-9]*";

BINARY_INTEGER_LITERAL: "0[bB][01]+";

OCTAL_INTEGER_LITERAL: "(0[_oO0])?[0-7]*";

HEX_INTEGER_LITERAL: "0[xX][0-9a-fA-F]+";

variable: identifier
          ;

identifier: "[a-zA-Z_$][a-zA-Z_0-9]*"
            ;
