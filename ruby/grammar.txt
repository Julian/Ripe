IGNORE : "([ \f\t\n]*)";

# 10.1
program : >statements?< [EOF];

# XXX: Don't know why the first separator is needed here to ignore newlines
statements : [separator]* statement ([separator]+ statement)* [separator]*
           ;

separator : ";" 
          | "\n"
          ;

# 12.1
statement  : <assignment_statement>
           | <expression_statement>
           ;

# 11.5.1
expression_statement : expression
                     ;

expression : <equality_expression>
           | <variable>
           | <literal>
           ;

equality_expression : literal binary_op expression
                    ;

binary_op  : <BINOP> | <ADDOP>;

BINOP      : "(==)"
           ;

# 8.7.6
literal : <numeric_literal>
        | <string_literal>
        ;

# 8.7.6.2
numeric_literal : ADDOP* unsigned_number
                ;

ADDOP : "[+-]";

unsigned_number : <integer_literal>
                ;

integer_literal: DECIMAL_INTEGER_LITERAL
               | BINARY_INTEGER_LITERAL
               | OCTAL_INTEGER_LITERAL
               | HEX_INTEGER_LITERAL
               ;

DECIMAL_INTEGER_LITERAL: "(0[dD])?[1-9][0-9]*";

BINARY_INTEGER_LITERAL: "0[bB][01]+";

OCTAL_INTEGER_LITERAL: "(0[_oO0])?[0-7]*";

HEX_INTEGER_LITERAL: "0[xX][0-9a-fA-F]+";

# 8.7.6.3
string_literal : SINGLE_QUOTED_STRING
               | DOUBLE_QUOTED_STRING
               ;

SINGLE_QUOTED_STRING : "'.*'";

DOUBLE_QUOTED_STRING : "\".*\"";

# 11.4.2
assignment : assignment_expression
           | assignment_statement
           ;

assignment_expression : single_assignment_expression
                      ;

assignment_statement : single_assignment_statement
                     ;

single_assignment : single_assignment_expression
                  | single_assignment_statement
                  ;

single_assignment_expression : single_variable_assignment_expression
                             ;

single_assignment_statement : single_variable_assignment_statement
                             ;

single_variable_assignment : single_variable_assignment_expression
                           | single_variable_assignment_statement
                           ;

single_variable_assignment_expression : variable ["="] operator_expression;

single_variable_assignment_statement : variable ["="] method_invocation_without_parentheses
                                     ;

# 11.3.1
method_invocation_without_parentheses : expression
                                      | "XXX"
                                      ;

# 11.4.1
operator_expression : assignment_expression
                    ;

variable : IDENTIFIER
         | PSEUDO_VARIABLE
         ;

# 11.5.4.8.1
PSEUDO_VARIABLE : "(nil)|(true)|(false)|(self)";

IDENTIFIER: "[a-zA-Z_$][a-zA-Z_0-9]*"
            ;
